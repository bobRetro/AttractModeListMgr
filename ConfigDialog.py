# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'configDlg.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os
import sys
import traceback
import subprocess

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog, QDialog


def getMameVersion(mamePath):
    ret = subprocess.run(
        [mamePath, "-version"],
        stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True, shell=True)
    print('Found Mame version {}'.format(ret))


class Ui_configDialog(QDialog):

    def __init__(self, parent=None):
        self.parent = parent
        super().__init__()

    def setupUi(self, configDialog):
        configDialog.setObjectName("configDialog")
        configDialog.resize(400, 150)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(configDialog.sizePolicy().hasHeightForWidth())
        configDialog.setSizePolicy(sizePolicy)
        configDialog.setMinimumSize(QtCore.QSize(400, 150))
        configDialog.setMaximumSize(QtCore.QSize(400, 150))
        configDialog.setModal(True)
        self.buttonBox = QtWidgets.QDialogButtonBox(configDialog)
        self.buttonBox.setGeometry(QtCore.QRect(30, 80, 341, 32))
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.amDir = QtWidgets.QLineEdit(configDialog)
        self.amDir.setGeometry(QtCore.QRect(160, 10, 191, 20))
        self.amDir.setObjectName("amDir")
        self.label = QtWidgets.QLabel(configDialog)
        self.label.setGeometry(QtCore.QRect(10, 10, 141, 16))
        self.label.setObjectName("label")
        self.amDirBtn = QtWidgets.QPushButton(configDialog)
        self.amDirBtn.setGeometry(QtCore.QRect(360, 10, 31, 21))
        self.amDirBtn.setObjectName("amDirBtn")
        self.label_2 = QtWidgets.QLabel(configDialog)
        self.label_2.setGeometry(QtCore.QRect(10, 40, 141, 16))
        self.label_2.setObjectName("label_2")
        self.mameExe = QtWidgets.QLineEdit(configDialog)
        self.mameExe.setGeometry(QtCore.QRect(160, 40, 191, 20))
        self.mameExe.setObjectName("mameExe")
        self.mameExeBtn = QtWidgets.QPushButton(configDialog)
        self.mameExeBtn.setGeometry(QtCore.QRect(360, 40, 31, 21))
        self.mameExeBtn.setObjectName("mameExeBtn")
        self.label_3 = QtWidgets.QLabel(configDialog)
        self.label_3.setGeometry(QtCore.QRect(10, 60, 271, 16))
        self.label_3.setObjectName("label_3")

        self.retranslateUi(configDialog)
        self.buttonBox.accepted.connect(configDialog.accept)
        self.buttonBox.rejected.connect(configDialog.reject)
#        self.mameExe.textChanged.connect(self.mameExeChanged)
        self.amDirBtn.clicked.connect(self.getAmDirectory)
        self.mameExeBtn.clicked.connect(self.openMameExeDialog)
        QtCore.QMetaObject.connectSlotsByName(configDialog)

    def retranslateUi(self, configDialog):
        _translate = QtCore.QCoreApplication.translate
        configDialog.setWindowTitle(_translate("configDialog", "Configuration"))
        self.label.setText(_translate("configDialog", "AttractMode Directory"))
        self.amDirBtn.setText(_translate("configDialog", "..."))
        self.label_2.setText(_translate("configDialog", "Mame Executable"))
        self.mameExeBtn.setText(_translate("configDialog", "..."))
        self.label_3.setText(_translate("configDialog", "(Only necessary if you use a non-standard Mame build)"))

    def getAmDirectory(self):
        try:
            options = QFileDialog.Options()
            options |= QFileDialog.DontUseNativeDialog
            fileName = str(QFileDialog.getExistingDirectory())
            if fileName:
                self.amDir.setText(os.path.normpath(fileName))
        except Exception as e:
            print("Oops!", sys.exc_info()[0], "occurred.")
            raise e

    def openMameExeDialog(self):
        try:
            options = QFileDialog.Options()
            options |= QFileDialog.DontUseNativeDialog
            dirName = os.path.dirname(os.path.realpath(self.mameExe.text()))
            if os.path.isdir(dirName):
                tempDir = dirName
            else:
                tempDir = 'c:\\'
            fileName, _ = QFileDialog.getOpenFileName(self, 'Mame Exe', tempDir, "Exe files (*.exe)")
            if os.path.isfile(fileName):
                self.mameExe.setText(os.path.normpath(fileName))
        except Exception as e:
            traceback.print_exc()
            raise e
